- name: Add the user 'ydb' with a specific uid and a primary group of 'disk'
  ansible.builtin.user:
    name: ydb
    comment: Yandex DB
    uid: 2001
    group: disk

- name: Create ydbd directories if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  with_items:
    - "{{ ydbd_home }}"
    - "{{ ydbd_home }}/bin"
    - "{{ ydbd_home }}/lib"
    - "{{ ydbd_home }}/cfg"
    - "{{ ydbd_home }}/certs"

- name: Update repositories cache and install some packages
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items:
    - "unzip"

- name: Create data partitions
  community.general.parted:
    device: "/dev/{{ item }}"
    label: "gpt"
    name: "ydb-node-{{ item }}"
    number: 1
    state: present
  with_items:
    - "vdb"
    - "vdc"
    - "vdd"

- name: Copy certs
  ansible.builtin.copy:
    src: "certs/{{ item }}"
    dest: "{{ ydbd_home }}/certs/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - "ca.crt"
    - "node.crt"
    - "node.key"

- name: Copy ydbd binary file to server
  ansible.builtin.unarchive:
    src: "{{ ydbd_binary_url }}"
    dest: "{{ ydbd_home }}"
    remote_src: yes
    mode: a+x
    owner: root
    group: root
    include:
      - "ydbd-{{ ydbd_version }}-linux-{{ go_arch }}/bin"
      - "ydbd-{{ ydbd_version }}-linux-{{ go_arch }}/lib"
    extra_opts:
      - --strip-components=1
  tags:
    - ydbd-storage

- name: Copy ydbd-testdb systemd service file to server
  ansible.builtin.template:
    src: "ydbd-testdb.service.j2"
    dest: "/etc/systemd/system/ydbd-testdb.service"
    mode: 0644
    owner: root
    group: root
  tags:
    - ydbd-testdb
  notify: 
    - "systemctl daemon-reload"
    - "restart ydbd"

- name: Copy ydbd config file to server
  ansible.builtin.template:
    src: config.yaml.j2
    dest: "{{ ydbd_home }}/cfg/config.yaml"
    mode: 0644
    owner: root
    group: root
  tags:
    - ydbd-storage
    - ydbd-testdb
  notify: 
    - "systemctl daemon-reload"
    - "restart ydbd"

- name: Enable service ydbd-testdb and ensure it is not masked
  ansible.builtin.systemd_service:
    name: ydbd-testdb
    enabled: true
    masked: no
    daemon_reload: true
  tags:
    - ydbd-testdb

- name: Make sure ydbd-testdb service unit is running
  ansible.builtin.systemd_service:
    state: started
    name: ydbd-testdb
    daemon_reload: true
  tags:
    - ydbd-testdb
